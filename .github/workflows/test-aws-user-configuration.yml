name: Test IAM User Login and permissions

on:
  workflow_dispatch:

env:
  TERRAFORM_AWS_ROLE_TO_ASSUME: ${{ secrets.TERRAFORM_DEVOPS_AWS_ROLE_ARN }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_DEFAULT_REGION }}
  BUCKET: ${{ vars.PRIMARY_BUCKET_ID }}

jobs:
  test:
    name: Run Tests for IAM Users
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 3  # Fetch the last three commits

    # Step 1: Authenticate with AWS using AssumeRole
    - name: Assume Role
      id: assume_role
      run: |
        ROLE_SESSION_NAME="test-iam-user-session"
        CREDENTIALS=$(aws sts assume-role --role-arn ${{ github.event.inputs.role_arn }} \
          --role-session-name $ROLE_SESSION_NAME)
        export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r '.Credentials.AccessKeyId')
        export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r '.Credentials.SecretAccessKey')
        export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r '.Credentials.SessionToken')

        echo "::add-mask::$AWS_ACCESS_KEY_ID"
        echo "::add-mask::$AWS_SECRET_ACCESS_KEY"
        echo "::add-mask::$AWS_SESSION_TOKEN"

        echo "::set-output name=access_key_id::$AWS_ACCESS_KEY_ID"
        echo "::set-output name=secret_access_key::$AWS_SECRET_ACCESS_KEY"
        echo "::set-output name=session_token::$AWS_SESSION_TOKEN"

      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ env.AWS_DEFAULT_REGION }}

    # Step 2: Download the JSON file from S3
    - name: Download User Credentials JSON from S3
      id: download_json
      run: |
        aws s3 cp s3://${{ env.BUCKET }} }}/environment/aws/management/data-uploads/student-credentials/codeyou_student_credentials_${{ github.ref_name }}.json ./student_credentials.json
      env:
        AWS_ACCESS_KEY_ID: ${{ steps.assume_role.outputs.access_key_id }}
        AWS_SECRET_ACCESS_KEY: ${{ steps.assume_role.outputs.secret_access_key }}
        AWS_SESSION_TOKEN: ${{ steps.assume_role.outputs.session_token }}
        AWS_REGION: us-east-1

    # Step 3: Run Tests for Each IAM User
    - name: Run Tests for IAM Users
      run: |
        python -m pip install --upgrade pip
        pip install boto3 pytest jq
        python tests/handle_testruns.py ./student_credentials.json
